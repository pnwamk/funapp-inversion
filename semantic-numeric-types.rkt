#lang typed/racket/base

(require "syntactic-type-rep.rkt")

(provide type-of-add1
         type-of-+
         #;type-of-<)


(: type-of-add1 (Listof UNOP))
(define type-of-add1
  (list ;; 23 cases
   (UNOP Zero One)
   (UNOP One Byte)
   (UNOP Byte Index)
   (UNOP Index Fixnum)
   (UNOP Integer Integer)
   (UNOP Rational Rational)
   (UNOP Float Float)
   (UNOP Single-Float Single-Float)
   (UNOP Float-Complex Float-Complex)
   (UNOP Single-Float-Complex Single-Float-Complex)
   (UNOP Nonnegative-Real Positive-Real)
   (UNOP Negative-Fixnum Nonpositive-Fixnum)
   (UNOP Negative-Integer Nonpositive-Integer)
   (UNOP Number Number)))

(: type-of-+ (Listof BINOP))
(define type-of-+
  (list ;; 86 cases --> 28 cases
   (BINOP Byte Byte Index)
   (BINOP Index Index Nonnegative-Fixnum)
   (BINOP Negative-Fixnum One Nonpositive-Fixnum)
   (BINOP One Negative-Fixnum Nonpositive-Fixnum)
   (BINOP Nonpositive-Fixnum Nonnegative-Fixnum Fixnum)
   (BINOP Nonnegative-Fixnum Nonpositive-Fixnum Fixnum)
   (BINOP Integer Integer Integer)
   (BINOP Rational Rational Rational)
   (BINOP Float Real Float)
   (BINOP Real Float Float)
   (BINOP Single-Float (Un Rational Single-Float) Single-Float)
   (BINOP (Un Rational Single-Float) Single-Float Single-Float)
   (BINOP Inexact-Real Real Inexact-Real)
   (BINOP Real Inexact-Real Inexact-Real)
   (BINOP Real Real Real)
   (BINOP Exact-Number Exact-Number Exact-Number)
   (BINOP Float-Complex Number Float-Complex)
   (BINOP Number Float-Complex Float-Complex)
   (BINOP Float Inexact-Complex Float-Complex)
   (BINOP Inexact-Complex Float Float-Complex)
   (BINOP Single-Float-Complex (Un Rational Single-Float Single-Float-Complex) Single-Float-Complex)
   (BINOP (Un Rational Single-Float Single-Float-Complex) Single-Float-Complex Single-Float-Complex)
   (BINOP Inexact-Complex (Un Rational Inexact-Real Inexact-Complex) Inexact-Complex)
   (BINOP (Un Rational Inexact-Real Inexact-Complex) Inexact-Complex Inexact-Complex)
   (BINOP Number Number Number)
   (BINOP Nonnegative-Real Positive-Real Positive-Real)
   (BINOP Positive-Real Nonnegative-Real Positive-Real)
   (BINOP Negative-Real Nonpositive-Real Negative-Real)
   (BINOP Nonpositive-Real Negative-Real Negative-Real)
   (BINOP Nonnegative-Real Nonnegative-Real Nonnegative-Real)
   (BINOP Nonpositive-Real Nonpositive-Real Nonpositive-Real)))


         

;(define (<-type-pattern base pos non-neg neg non-pos [zero (term Real-Zero)]
;                        #:no-false-props? [no-false-props? #f])
;  (define (<-case l r true-prop false-prop)
;    (term (-> ,base ,zero Boolean : ,true-prop ,(if no-false-props? (term tt) false-prop))))
;  (list (<-case base zero (term (∈ 0 ,neg)) (term (∈ 0 ,non-neg)))
;        (<-case zero base (term (∈ 1 ,pos)) (term (∈ 1 ,non-pos)))
;        (<-case base (term Positive-Real) (term tt) (term (∈ 0 ,pos)))
;        (<-case base (term Nonnegative-Real) (term tt) (term (∈ 0 ,non-neg)))
;        (<-case (term Nonnegative-Real) base (term (∈ 1 ,pos)) 'tt)
;        (<-case base (term Nonpositive-Real) (term (∈ 0 ,neg)) 'tt)
;        (<-case (term Negative-Real) base (term tt) (term (∈ 1 ,neg)))
;        (<-case (term Nonpositive-Real) base (term tt) (term (∈ 1 ,non-pos)))))
;
;(<-type-pattern (term Integer)
;                (term Positive-Integer)
;                (term Nonnegative-Integer)
;                (term Negative-Integer)
;                (term Nonpositive-Integer)
;                (term Zero))
;(<-type-pattern (term Rational)
;                (term Positive-Rational)
;                (term Nonnegative-Rational)
;                (term Negative-Rational)
;                (term Nonpositive-Rational)
;                (term Zero))
;(<-type-pattern (term Float)
;                (term Positive-Float)
;                (term Nonnegative-Float)
;                (term Negative-Float)
;                (term Nonpositive-Float)
;                #:no-false-props? #t)
;(<-type-pattern (term Single-Float)
;                (term Positive-Single-Float)
;                (term Nonnegative-Single-Float)
;                (term Negative-Single-Float)
;                (term Nonpositive-Single-Float)
;                #:no-false-props? #t)
;(<-type-pattern (term Inexact-Real)
;                (term Positive-Inexact-Real)
;                (term Nonnegative-Inexact-Real)
;                (term Negative-Inexact-Real)
;                (term Nonpositive-Inexact-Real)
;                #:no-false-props? #t)
;(<-type-pattern (term Real)
;                (term Positive-Real)
;                (term Nonnegative-Real)
;                (term Negative-Real)
;                (term Nonpositive-Real)
;                #:no-false-props? #t)

